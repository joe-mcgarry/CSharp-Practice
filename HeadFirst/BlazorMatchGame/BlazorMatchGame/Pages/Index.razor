@page "/"

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var animalNumber = 0; animalNumber < shuffledAnimals.Count; animalNumber++)
            {
                var animal = shuffledAnimals[animalNumber];
                var uniqueDescription = $"Button #{animalNumber}";
                <div class="col-3">
                    <button @onclick="@(() => ButtonClick(animal, uniqueDescription))"
                            type="button" class="btn btn-outline-dark">
                        <h1>@animal</h1>
                    </button>
                </div>
            }
    </div>
</div>

@code {
    List<string> animalEmoji = new List<string>()
    {
        "🐶", "🐶",
        "🐺", "🐺",
        "🐮", "🐮",
        "🦊", "🦊",
        "🐱", "🐱",
        "🦁", "🦁",
        "🐯", "🐯",
        "🐹", "🐹",
    };

    List<string> shuffledAnimals = new List<string>();

    protected override void OnInitialized()
    {
        SetUpGame();
    }

    private void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji.OrderBy(item => random.Next()).ToList();
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            // First selection of pair
            lastAnimalFound = animal;
            lastDescription = animalDescription;
        }
        else if ((lastAnimalFound == animal) && (animalDescription != lastDescription))
        {
            // Match found, reset for next pair
            lastAnimalFound = string.Empty;
            shuffledAnimals = shuffledAnimals.Select(a => a.Replace(animal, string.Empty)).ToList();
        }
        else
        {
            // Pair doesn't match, reset selection
            lastAnimalFound = string.Empty;
        }
    }
}
